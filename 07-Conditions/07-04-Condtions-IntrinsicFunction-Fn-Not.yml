AWSTemplateFormatVersion: 2010-09-09

Parameters:
  MyKeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Select the Keypair

  EnvironmentName:
    Description: Select the environment
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod

Mappings:
  MyRegionMap:
    us-east-2:
      AMIID: ami-02f97949d306b597a
    us-west-2:
      AMIID: ami-0efa651876de2a5ce

  MyEnvironmentMap:
    dev:
      InstanceType: t2.micro
    prod:
      InstanceType: t2.small

Conditions:
  CreateEIPForProd: !Equals [!Ref EnvironmentName,prod]
  CreateSecurityGroup: !Equals [!Ref EnvironmentName, dev]
  CreateProdSecurityGroup: !Equals [!Ref EnvironmentName, prod]

Resources:
  MyVMInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap
        - MyRegionMap
        - !Ref 'AWS::Region'
        - AMIID
      InstanceType: !FindInMap
        - MyEnvironmentMap
        - !Ref EnvironmentName
        - InstanceType
      KeyName: !Ref MyKeyName
      SecurityGroups: !If [CreateSecurityGroup, [!Ref DevEnvSecurityGroup], [!Ref ProdEnvSecurityGroup]]

  MyProdEIP:
    Type: AWS::EC2::EIP
    Condition: CreateEIPForProd
    Properties: 
      InstanceId: !Ref MyVMInstance

  DevEnvSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Condition: CreateSecurityGroup
    Properties:
      GroupDescription: Dev SG
      SecurityGroupIngress:
        - IpProtocol : tcp
          Fromport: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0

  ProdEnvSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Condition: CreateProdSecurityGroup
    Properties:
      GroupDescription: Prod SG
      SecurityGroupIngress:
        - IpProtocol : tcp
          Fromport: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0        
